-- ==============================================================
-- Generated by Dot2Vhdl ver. 0.21
-- File created: Thu Feb  6 15:15:24 2020

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity example is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (0 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	x_address0 : out std_logic_vector (31 downto 0);
	x_ce0 : out std_logic;
	x_we0 : out std_logic;
	x_dout0 : out std_logic_vector (31 downto 0);
	x_din0 : in std_logic_vector (31 downto 0);
	x_address1 : out std_logic_vector (31 downto 0);
	x_ce1 : out std_logic;
	x_we1 : out std_logic;
	x_dout1 : out std_logic_vector (31 downto 0);
	x_din1 : in std_logic_vector (31 downto 0);
	a_address0 : out std_logic_vector (31 downto 0);
	a_ce0 : out std_logic;
	a_we0 : out std_logic;
	a_dout0 : out std_logic_vector (31 downto 0);
	a_din0 : in std_logic_vector (31 downto 0);
	a_address1 : out std_logic_vector (31 downto 0);
	a_ce1 : out std_logic;
	a_we1 : out std_logic;
	a_dout1 : out std_logic_vector (31 downto 0);
	a_din1 : in std_logic_vector (31 downto 0);
	w_address0 : out std_logic_vector (31 downto 0);
	w_ce0 : out std_logic;
	w_we0 : out std_logic;
	w_dout0 : out std_logic_vector (31 downto 0);
	w_din0 : in std_logic_vector (31 downto 0);
	w_address1 : out std_logic_vector (31 downto 0);
	w_ce1 : out std_logic;
	w_we1 : out std_logic;
	w_dout1 : out std_logic_vector (31 downto 0);
	w_din1 : in std_logic_vector (31 downto 0));
end;

architecture behavioral of example is 

	signal brCst_block1_clk : std_logic;
	signal brCst_block1_rst : std_logic;
	signal brCst_block1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal brCst_block1_pValidArray_0 : std_logic;
	signal brCst_block1_readyArray_0 : std_logic;
	signal brCst_block1_nReadyArray_0 : std_logic;
	signal brCst_block1_validArray_0 : std_logic;
	signal brCst_block1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_0_clk : std_logic;
	signal cst_0_rst : std_logic;
	signal cst_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_0_pValidArray_0 : std_logic;
	signal cst_0_readyArray_0 : std_logic;
	signal cst_0_nReadyArray_0 : std_logic;
	signal cst_0_validArray_0 : std_logic;
	signal cst_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_1_clk : std_logic;
	signal phi_1_rst : std_logic;
	signal phi_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_1_pValidArray_0 : std_logic;
	signal phi_1_pValidArray_1 : std_logic;
	signal phi_1_pValidArray_2 : std_logic;
	signal phi_1_readyArray_0 : std_logic;
	signal phi_1_readyArray_1 : std_logic;
	signal phi_1_readyArray_2 : std_logic;
	signal phi_1_nReadyArray_0 : std_logic;
	signal phi_1_validArray_0 : std_logic;
	signal phi_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal load_4_clk : std_logic;
	signal load_4_rst : std_logic;
	signal load_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_4_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_4_pValidArray_0 : std_logic;
	signal load_4_pValidArray_1 : std_logic;
	signal load_4_readyArray_0 : std_logic;
	signal load_4_readyArray_1 : std_logic;
	signal load_4_nReadyArray_0 : std_logic;
	signal load_4_validArray_0 : std_logic;
	signal load_4_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_4_nReadyArray_1 : std_logic;
	signal load_4_validArray_1 : std_logic;
	signal load_4_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal load_7_clk : std_logic;
	signal load_7_rst : std_logic;
	signal load_7_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_7_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_7_pValidArray_0 : std_logic;
	signal load_7_pValidArray_1 : std_logic;
	signal load_7_readyArray_0 : std_logic;
	signal load_7_readyArray_1 : std_logic;
	signal load_7_nReadyArray_0 : std_logic;
	signal load_7_validArray_0 : std_logic;
	signal load_7_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_7_nReadyArray_1 : std_logic;
	signal load_7_validArray_1 : std_logic;
	signal load_7_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal load_10_clk : std_logic;
	signal load_10_rst : std_logic;
	signal load_10_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_10_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_10_pValidArray_0 : std_logic;
	signal load_10_pValidArray_1 : std_logic;
	signal load_10_readyArray_0 : std_logic;
	signal load_10_readyArray_1 : std_logic;
	signal load_10_nReadyArray_0 : std_logic;
	signal load_10_validArray_0 : std_logic;
	signal load_10_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_10_nReadyArray_1 : std_logic;
	signal load_10_validArray_1 : std_logic;
	signal load_10_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal mul_11_clk : std_logic;
	signal mul_11_rst : std_logic;
	signal mul_11_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_11_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_11_pValidArray_0 : std_logic;
	signal mul_11_pValidArray_1 : std_logic;
	signal mul_11_readyArray_0 : std_logic;
	signal mul_11_readyArray_1 : std_logic;
	signal mul_11_nReadyArray_0 : std_logic;
	signal mul_11_validArray_0 : std_logic;
	signal mul_11_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal store_0_clk : std_logic;
	signal store_0_rst : std_logic;
	signal store_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal store_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal store_0_pValidArray_0 : std_logic;
	signal store_0_pValidArray_1 : std_logic;
	signal store_0_readyArray_0 : std_logic;
	signal store_0_readyArray_1 : std_logic;
	signal store_0_nReadyArray_0 : std_logic;
	signal store_0_validArray_0 : std_logic;
	signal store_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal store_0_nReadyArray_1 : std_logic;
	signal store_0_validArray_1 : std_logic;
	signal store_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal cst_1_clk : std_logic;
	signal cst_1_rst : std_logic;
	signal cst_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_1_pValidArray_0 : std_logic;
	signal cst_1_readyArray_0 : std_logic;
	signal cst_1_nReadyArray_0 : std_logic;
	signal cst_1_validArray_0 : std_logic;
	signal cst_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal add_14_clk : std_logic;
	signal add_14_rst : std_logic;
	signal add_14_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_14_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_14_pValidArray_0 : std_logic;
	signal add_14_pValidArray_1 : std_logic;
	signal add_14_readyArray_0 : std_logic;
	signal add_14_readyArray_1 : std_logic;
	signal add_14_nReadyArray_0 : std_logic;
	signal add_14_validArray_0 : std_logic;
	signal add_14_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_2_clk : std_logic;
	signal cst_2_rst : std_logic;
	signal cst_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_2_pValidArray_0 : std_logic;
	signal cst_2_readyArray_0 : std_logic;
	signal cst_2_nReadyArray_0 : std_logic;
	signal cst_2_validArray_0 : std_logic;
	signal cst_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_15_clk : std_logic;
	signal icmp_15_rst : std_logic;
	signal icmp_15_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_15_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_15_pValidArray_0 : std_logic;
	signal icmp_15_pValidArray_1 : std_logic;
	signal icmp_15_readyArray_0 : std_logic;
	signal icmp_15_readyArray_1 : std_logic;
	signal icmp_15_nReadyArray_0 : std_logic;
	signal icmp_15_validArray_0 : std_logic;
	signal icmp_15_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_0_nReadyArray_2 : std_logic;
	signal fork_0_validArray_2 : std_logic;
	signal fork_0_dataOutArray_2 : std_logic_vector(31 downto 0);

	signal fork_1_clk : std_logic;
	signal fork_1_rst : std_logic;
	signal fork_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_pValidArray_0 : std_logic;
	signal fork_1_readyArray_0 : std_logic;
	signal fork_1_nReadyArray_0 : std_logic;
	signal fork_1_validArray_0 : std_logic;
	signal fork_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_1_nReadyArray_1 : std_logic;
	signal fork_1_validArray_1 : std_logic;
	signal fork_1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal fork_2_clk : std_logic;
	signal fork_2_rst : std_logic;
	signal fork_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_pValidArray_0 : std_logic;
	signal fork_2_readyArray_0 : std_logic;
	signal fork_2_nReadyArray_0 : std_logic;
	signal fork_2_validArray_0 : std_logic;
	signal fork_2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_nReadyArray_1 : std_logic;
	signal fork_2_validArray_1 : std_logic;
	signal fork_2_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_0_clk : std_logic;
	signal branch_0_rst : std_logic;
	signal branch_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_0_pValidArray_0 : std_logic;
	signal branch_0_pValidArray_1 : std_logic;
	signal branch_0_readyArray_0 : std_logic;
	signal branch_0_readyArray_1 : std_logic;
	signal branch_0_nReadyArray_0 : std_logic;
	signal branch_0_validArray_0 : std_logic;
	signal branch_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_nReadyArray_1 : std_logic;
	signal branch_0_validArray_1 : std_logic;
	signal branch_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_1_clk : std_logic;
	signal branch_1_rst : std_logic;
	signal branch_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_1_pValidArray_0 : std_logic;
	signal branch_1_pValidArray_1 : std_logic;
	signal branch_1_readyArray_0 : std_logic;
	signal branch_1_readyArray_1 : std_logic;
	signal branch_1_nReadyArray_0 : std_logic;
	signal branch_1_validArray_0 : std_logic;
	signal branch_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_nReadyArray_1 : std_logic;
	signal branch_1_validArray_1 : std_logic;
	signal branch_1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal MC_x_clk : std_logic;
	signal MC_x_rst : std_logic;
	signal MC_x_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_x_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_x_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_x_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_x_pValidArray_0 : std_logic;
	signal MC_x_pValidArray_1 : std_logic;
	signal MC_x_pValidArray_2 : std_logic;
	signal MC_x_pValidArray_3 : std_logic;
	signal MC_x_readyArray_0 : std_logic;
	signal MC_x_readyArray_1 : std_logic;
	signal MC_x_readyArray_2 : std_logic;
	signal MC_x_readyArray_3 : std_logic;
	signal MC_x_nReadyArray_0 : std_logic;
	signal MC_x_validArray_0 : std_logic;
	signal MC_x_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_x_nReadyArray_1 : std_logic;
	signal MC_x_validArray_1 : std_logic;
	signal MC_x_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_x_we0_ce0 : std_logic;

	signal MC_a_clk : std_logic;
	signal MC_a_rst : std_logic;
	signal MC_a_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_a_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_a_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_a_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_a_pValidArray_0 : std_logic;
	signal MC_a_pValidArray_1 : std_logic;
	signal MC_a_pValidArray_2 : std_logic;
	signal MC_a_pValidArray_3 : std_logic;
	signal MC_a_readyArray_0 : std_logic;
	signal MC_a_readyArray_1 : std_logic;
	signal MC_a_readyArray_2 : std_logic;
	signal MC_a_readyArray_3 : std_logic;
	signal MC_a_nReadyArray_0 : std_logic;
	signal MC_a_validArray_0 : std_logic;
	signal MC_a_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_a_nReadyArray_1 : std_logic;
	signal MC_a_validArray_1 : std_logic;
	signal MC_a_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_a_we0_ce0 : std_logic;

	signal MC_w_clk : std_logic;
	signal MC_w_rst : std_logic;
	signal MC_w_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_w_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_w_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_w_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_w_pValidArray_0 : std_logic;
	signal MC_w_pValidArray_1 : std_logic;
	signal MC_w_pValidArray_2 : std_logic;
	signal MC_w_pValidArray_3 : std_logic;
	signal MC_w_readyArray_0 : std_logic;
	signal MC_w_readyArray_1 : std_logic;
	signal MC_w_readyArray_2 : std_logic;
	signal MC_w_readyArray_3 : std_logic;
	signal MC_w_nReadyArray_0 : std_logic;
	signal MC_w_validArray_0 : std_logic;
	signal MC_w_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_w_nReadyArray_1 : std_logic;
	signal MC_w_validArray_1 : std_logic;
	signal MC_w_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_w_we0_ce0 : std_logic;

	signal cst_3_clk : std_logic;
	signal cst_3_rst : std_logic;
	signal cst_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_3_pValidArray_0 : std_logic;
	signal cst_3_readyArray_0 : std_logic;
	signal cst_3_nReadyArray_0 : std_logic;
	signal cst_3_validArray_0 : std_logic;
	signal cst_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_2 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_3 : std_logic_vector(0 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_pValidArray_1 : std_logic;
	signal end_0_pValidArray_2 : std_logic;
	signal end_0_pValidArray_3 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_readyArray_1 : std_logic;
	signal end_0_readyArray_2 : std_logic;
	signal end_0_readyArray_3 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal forkC_6_clk : std_logic;
	signal forkC_6_rst : std_logic;
	signal forkC_6_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_6_pValidArray_0 : std_logic;
	signal forkC_6_readyArray_0 : std_logic;
	signal forkC_6_nReadyArray_0 : std_logic;
	signal forkC_6_validArray_0 : std_logic;
	signal forkC_6_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_6_nReadyArray_1 : std_logic;
	signal forkC_6_validArray_1 : std_logic;
	signal forkC_6_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_6_nReadyArray_2 : std_logic;
	signal forkC_6_validArray_2 : std_logic;
	signal forkC_6_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal branchC_2_clk : std_logic;
	signal branchC_2_rst : std_logic;
	signal branchC_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_2_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_2_pValidArray_0 : std_logic;
	signal branchC_2_pValidArray_1 : std_logic;
	signal branchC_2_readyArray_0 : std_logic;
	signal branchC_2_readyArray_1 : std_logic;
	signal branchC_2_nReadyArray_0 : std_logic;
	signal branchC_2_validArray_0 : std_logic;
	signal branchC_2_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_2_nReadyArray_1 : std_logic;
	signal branchC_2_validArray_1 : std_logic;
	signal branchC_2_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_7_clk : std_logic;
	signal fork_7_rst : std_logic;
	signal fork_7_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_7_pValidArray_0 : std_logic;
	signal fork_7_readyArray_0 : std_logic;
	signal fork_7_nReadyArray_0 : std_logic;
	signal fork_7_validArray_0 : std_logic;
	signal fork_7_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_7_nReadyArray_1 : std_logic;
	signal fork_7_validArray_1 : std_logic;
	signal fork_7_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phiC_0_clk : std_logic;
	signal phiC_0_rst : std_logic;
	signal phiC_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal phiC_0_pValidArray_0 : std_logic;
	signal phiC_0_pValidArray_1 : std_logic;
	signal phiC_0_readyArray_0 : std_logic;
	signal phiC_0_readyArray_1 : std_logic;
	signal phiC_0_nReadyArray_0 : std_logic;
	signal phiC_0_validArray_0 : std_logic;
	signal phiC_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal phiC_0_nReadyArray_1 : std_logic;
	signal phiC_0_validArray_1 : std_logic;
	signal phiC_0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal forkC_8_clk : std_logic;
	signal forkC_8_rst : std_logic;
	signal forkC_8_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_8_pValidArray_0 : std_logic;
	signal forkC_8_readyArray_0 : std_logic;
	signal forkC_8_nReadyArray_0 : std_logic;
	signal forkC_8_validArray_0 : std_logic;
	signal forkC_8_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_8_nReadyArray_1 : std_logic;
	signal forkC_8_validArray_1 : std_logic;
	signal forkC_8_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal branchC_3_clk : std_logic;
	signal branchC_3_rst : std_logic;
	signal branchC_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_3_pValidArray_0 : std_logic;
	signal branchC_3_pValidArray_1 : std_logic;
	signal branchC_3_readyArray_0 : std_logic;
	signal branchC_3_readyArray_1 : std_logic;
	signal branchC_3_nReadyArray_0 : std_logic;
	signal branchC_3_validArray_0 : std_logic;
	signal branchC_3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_nReadyArray_1 : std_logic;
	signal branchC_3_validArray_1 : std_logic;
	signal branchC_3_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_9_clk : std_logic;
	signal fork_9_rst : std_logic;
	signal fork_9_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_9_pValidArray_0 : std_logic;
	signal fork_9_readyArray_0 : std_logic;
	signal fork_9_nReadyArray_0 : std_logic;
	signal fork_9_validArray_0 : std_logic;
	signal fork_9_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_9_nReadyArray_1 : std_logic;
	signal fork_9_validArray_1 : std_logic;
	signal fork_9_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phiC_1_clk : std_logic;
	signal phiC_1_rst : std_logic;
	signal phiC_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_1_pValidArray_0 : std_logic;
	signal phiC_1_readyArray_0 : std_logic;
	signal phiC_1_nReadyArray_0 : std_logic;
	signal phiC_1_validArray_0 : std_logic;
	signal phiC_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal sink_0_clk : std_logic;
	signal sink_0_rst : std_logic;
	signal sink_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_0_pValidArray_0 : std_logic;
	signal sink_0_readyArray_0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal sink_2_clk : std_logic;
	signal sink_2_rst : std_logic;
	signal sink_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_2_pValidArray_0 : std_logic;
	signal sink_2_readyArray_0 : std_logic;

	signal source_0_clk : std_logic;
	signal source_0_rst : std_logic;
	signal source_0_nReadyArray_0 : std_logic;
	signal source_0_validArray_0 : std_logic;
	signal source_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal source_1_clk : std_logic;
	signal source_1_rst : std_logic;
	signal source_1_nReadyArray_0 : std_logic;
	signal source_1_validArray_0 : std_logic;
	signal source_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffI_0_clk : std_logic;
	signal buffI_0_rst : std_logic;
	signal buffI_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffI_0_pValidArray_0 : std_logic;
	signal buffI_0_readyArray_0 : std_logic;
	signal buffI_0_nReadyArray_0 : std_logic;
	signal buffI_0_validArray_0 : std_logic;
	signal buffI_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffA_1_clk : std_logic;
	signal buffA_1_rst : std_logic;
	signal buffA_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffA_1_pValidArray_0 : std_logic;
	signal buffA_1_readyArray_0 : std_logic;
	signal buffA_1_nReadyArray_0 : std_logic;
	signal buffA_1_validArray_0 : std_logic;
	signal buffA_1_dataOutArray_0 : std_logic_vector(0 downto 0);

begin


	brCst_block1_clk <= clk;
	brCst_block1_rst <= rst;
	fork_7_pValidArray_0 <= brCst_block1_validArray_0;
	brCst_block1_nReadyArray_0 <= fork_7_readyArray_0;
	fork_7_dataInArray_0 <= brCst_block1_dataOutArray_0;

	cst_0_clk <= clk;
	cst_0_rst <= rst;
	branch_0_pValidArray_0 <= cst_0_validArray_0;
	cst_0_nReadyArray_0 <= branch_0_readyArray_0;
	branch_0_dataInArray_0 <= cst_0_dataOutArray_0;

	phi_1_clk <= clk;
	phi_1_rst <= rst;
	buffI_0_pValidArray_0 <= phi_1_validArray_0;
	phi_1_nReadyArray_0 <= buffI_0_readyArray_0;
	buffI_0_dataInArray_0 <= phi_1_dataOutArray_0;

	load_4_clk <= clk;
	load_4_rst <= rst;
	fork_1_pValidArray_0 <= load_4_validArray_0;
	load_4_nReadyArray_0 <= fork_1_readyArray_0;
	fork_1_dataInArray_0 <= load_4_dataOutArray_0;
	MC_x_pValidArray_0 <= load_4_validArray_1;
	load_4_nReadyArray_1 <= MC_x_readyArray_0;
	MC_x_dataInArray_0 <= load_4_dataOutArray_1;

	load_7_clk <= clk;
	load_7_rst <= rst;
	mul_11_pValidArray_0 <= load_7_validArray_0;
	load_7_nReadyArray_0 <= mul_11_readyArray_0;
	mul_11_dataInArray_0 <= load_7_dataOutArray_0;
	MC_a_pValidArray_1 <= load_7_validArray_1;
	load_7_nReadyArray_1 <= MC_a_readyArray_1;
	MC_a_dataInArray_1 <= load_7_dataOutArray_1;

	load_10_clk <= clk;
	load_10_rst <= rst;
	mul_11_pValidArray_1 <= load_10_validArray_0;
	load_10_nReadyArray_0 <= mul_11_readyArray_1;
	mul_11_dataInArray_1 <= load_10_dataOutArray_0;
	MC_w_pValidArray_0 <= load_10_validArray_1;
	load_10_nReadyArray_1 <= MC_w_readyArray_0;
	MC_w_dataInArray_0 <= load_10_dataOutArray_1;

	mul_11_clk <= clk;
	mul_11_rst <= rst;
	store_0_pValidArray_0 <= mul_11_validArray_0;
	mul_11_nReadyArray_0 <= store_0_readyArray_0;
	store_0_dataInArray_0 <= mul_11_dataOutArray_0;

	store_0_clk <= clk;
	store_0_rst <= rst;
	MC_a_pValidArray_3 <= store_0_validArray_0;
	store_0_nReadyArray_0 <= MC_a_readyArray_3;
	MC_a_dataInArray_3 <= store_0_dataOutArray_0;
	MC_a_pValidArray_2 <= store_0_validArray_1;
	store_0_nReadyArray_1 <= MC_a_readyArray_2;
	MC_a_dataInArray_2 <= store_0_dataOutArray_1;

	cst_1_clk <= clk;
	cst_1_rst <= rst;
	add_14_pValidArray_1 <= cst_1_validArray_0;
	cst_1_nReadyArray_0 <= add_14_readyArray_1;
	add_14_dataInArray_1 <= cst_1_dataOutArray_0;

	add_14_clk <= clk;
	add_14_rst <= rst;
	fork_2_pValidArray_0 <= add_14_validArray_0;
	add_14_nReadyArray_0 <= fork_2_readyArray_0;
	fork_2_dataInArray_0 <= add_14_dataOutArray_0;

	cst_2_clk <= clk;
	cst_2_rst <= rst;
	icmp_15_pValidArray_1 <= cst_2_validArray_0;
	cst_2_nReadyArray_0 <= icmp_15_readyArray_1;
	icmp_15_dataInArray_1 <= cst_2_dataOutArray_0;

	icmp_15_clk <= clk;
	icmp_15_rst <= rst;
	fork_9_pValidArray_0 <= icmp_15_validArray_0;
	icmp_15_nReadyArray_0 <= fork_9_readyArray_0;
	fork_9_dataInArray_0 <= icmp_15_dataOutArray_0;

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_3 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_3;
	end_0_dataInArray_3 <= ret_0_dataOutArray_0;

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	add_14_pValidArray_0 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= add_14_readyArray_0;
	add_14_dataInArray_0 <= fork_0_dataOutArray_0;
	load_4_pValidArray_1 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= load_4_readyArray_1;
	load_4_dataInArray_1 <= fork_0_dataOutArray_1;
	load_10_pValidArray_1 <= fork_0_validArray_2;
	fork_0_nReadyArray_2 <= load_10_readyArray_1;
	load_10_dataInArray_1 <= fork_0_dataOutArray_2;

	fork_1_clk <= clk;
	fork_1_rst <= rst;
	load_7_pValidArray_1 <= fork_1_validArray_0;
	fork_1_nReadyArray_0 <= load_7_readyArray_1;
	load_7_dataInArray_1 <= fork_1_dataOutArray_0;
	store_0_pValidArray_1 <= fork_1_validArray_1;
	fork_1_nReadyArray_1 <= store_0_readyArray_1;
	store_0_dataInArray_1 <= fork_1_dataOutArray_1;

	fork_2_clk <= clk;
	fork_2_rst <= rst;
	icmp_15_pValidArray_0 <= fork_2_validArray_0;
	fork_2_nReadyArray_0 <= icmp_15_readyArray_0;
	icmp_15_dataInArray_0 <= fork_2_dataOutArray_0;
	branch_1_pValidArray_0 <= fork_2_validArray_1;
	fork_2_nReadyArray_1 <= branch_1_readyArray_0;
	branch_1_dataInArray_0 <= fork_2_dataOutArray_1;

	branch_0_clk <= clk;
	branch_0_rst <= rst;
	phi_1_pValidArray_1 <= branch_0_validArray_0;
	branch_0_nReadyArray_0 <= phi_1_readyArray_1;
	phi_1_dataInArray_1 <= branch_0_dataOutArray_0;
	sink_0_pValidArray_0 <= branch_0_validArray_1;
	branch_0_nReadyArray_1 <= sink_0_readyArray_0;
	sink_0_dataInArray_0 <= branch_0_dataOutArray_1;

	branch_1_clk <= clk;
	branch_1_rst <= rst;
	phi_1_pValidArray_2 <= branch_1_validArray_0;
	branch_1_nReadyArray_0 <= phi_1_readyArray_2;
	phi_1_dataInArray_2 <= branch_1_dataOutArray_0;
	sink_1_pValidArray_0 <= branch_1_validArray_1;
	branch_1_nReadyArray_1 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= branch_1_dataOutArray_1;

	MC_x_clk <= clk;
	MC_x_rst <= rst;
	x_ce0 <= MC_x_we0_ce0;
	x_we0 <= MC_x_we0_ce0;
	load_4_pValidArray_0 <= MC_x_validArray_0;
	MC_x_nReadyArray_0 <= load_4_readyArray_0;
	load_4_dataInArray_0 <= MC_x_dataOutArray_0;
	end_0_pValidArray_0 <= MC_x_validArray_1;
	MC_x_nReadyArray_1 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= MC_x_dataOutArray_1;

	MC_a_clk <= clk;
	MC_a_rst <= rst;
	a_ce0 <= MC_a_we0_ce0;
	a_we0 <= MC_a_we0_ce0;
	load_7_pValidArray_0 <= MC_a_validArray_0;
	MC_a_nReadyArray_0 <= load_7_readyArray_0;
	load_7_dataInArray_0 <= MC_a_dataOutArray_0;
	end_0_pValidArray_1 <= MC_a_validArray_1;
	MC_a_nReadyArray_1 <= end_0_readyArray_1;
	end_0_dataInArray_1 <= MC_a_dataOutArray_1;

	MC_w_clk <= clk;
	MC_w_rst <= rst;
	w_ce0 <= MC_w_we0_ce0;
	w_we0 <= MC_w_we0_ce0;
	load_10_pValidArray_0 <= MC_w_validArray_0;
	MC_w_nReadyArray_0 <= load_10_readyArray_0;
	load_10_dataInArray_0 <= MC_w_dataOutArray_0;
	end_0_pValidArray_2 <= MC_w_validArray_1;
	MC_w_nReadyArray_1 <= end_0_readyArray_2;
	end_0_dataInArray_2 <= MC_w_dataOutArray_1;

	cst_3_clk <= clk;
	cst_3_rst <= rst;
	MC_a_pValidArray_0 <= cst_3_validArray_0;
	cst_3_nReadyArray_0 <= MC_a_readyArray_0;
	MC_a_dataInArray_0 <= cst_3_dataOutArray_0;

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	forkC_6_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= forkC_6_readyArray_0;
	forkC_6_dataInArray_0 <= start_0_dataOutArray_0;

	forkC_6_clk <= clk;
	forkC_6_rst <= rst;
	cst_0_pValidArray_0 <= forkC_6_validArray_0;
	forkC_6_nReadyArray_0 <= cst_0_readyArray_0;
	cst_0_dataInArray_0 <= "00000000000000000000000000000000";
	branchC_2_pValidArray_0 <= forkC_6_validArray_1;
	forkC_6_nReadyArray_1 <= branchC_2_readyArray_0;
	branchC_2_dataInArray_0 <= forkC_6_dataOutArray_1;
	brCst_block1_pValidArray_0 <= forkC_6_validArray_2;
	forkC_6_nReadyArray_2 <= brCst_block1_readyArray_0;
	brCst_block1_dataInArray_0 <= "1";

	branchC_2_clk <= clk;
	branchC_2_rst <= rst;
	phiC_0_pValidArray_0 <= branchC_2_validArray_0;
	branchC_2_nReadyArray_0 <= phiC_0_readyArray_0;
	phiC_0_dataInArray_0 <= branchC_2_dataOutArray_0;
	sink_2_pValidArray_0 <= branchC_2_validArray_1;
	branchC_2_nReadyArray_1 <= sink_2_readyArray_0;
	sink_2_dataInArray_0 <= branchC_2_dataOutArray_1;

	fork_7_clk <= clk;
	fork_7_rst <= rst;
	branch_0_pValidArray_1 <= fork_7_validArray_0;
	fork_7_nReadyArray_0 <= branch_0_readyArray_1;
	branch_0_dataInArray_1 <= fork_7_dataOutArray_0;
	branchC_2_pValidArray_1 <= fork_7_validArray_1;
	fork_7_nReadyArray_1 <= branchC_2_readyArray_1;
	branchC_2_dataInArray_1 <= fork_7_dataOutArray_1;

	phiC_0_clk <= clk;
	phiC_0_rst <= rst;
	buffA_1_pValidArray_0 <= phiC_0_validArray_0;
	phiC_0_nReadyArray_0 <= buffA_1_readyArray_0;
	buffA_1_dataInArray_0 <= phiC_0_dataOutArray_0;
	phi_1_pValidArray_0 <= phiC_0_validArray_1;
	phiC_0_nReadyArray_1 <= phi_1_readyArray_0;
	phi_1_dataInArray_0 <= phiC_0_dataOutArray_1;

	forkC_8_clk <= clk;
	forkC_8_rst <= rst;
	cst_3_pValidArray_0 <= forkC_8_validArray_0;
	forkC_8_nReadyArray_0 <= cst_3_readyArray_0;
	cst_3_dataInArray_0 <= "00000000000000000000000000000001";
	branchC_3_pValidArray_0 <= forkC_8_validArray_1;
	forkC_8_nReadyArray_1 <= branchC_3_readyArray_0;
	branchC_3_dataInArray_0 <= forkC_8_dataOutArray_1;

	branchC_3_clk <= clk;
	branchC_3_rst <= rst;
	phiC_0_pValidArray_1 <= branchC_3_validArray_0;
	branchC_3_nReadyArray_0 <= phiC_0_readyArray_1;
	phiC_0_dataInArray_1 <= branchC_3_dataOutArray_0;
	phiC_1_pValidArray_0 <= branchC_3_validArray_1;
	branchC_3_nReadyArray_1 <= phiC_1_readyArray_0;
	phiC_1_dataInArray_0 <= branchC_3_dataOutArray_1;

	fork_9_clk <= clk;
	fork_9_rst <= rst;
	branch_1_pValidArray_1 <= fork_9_validArray_0;
	fork_9_nReadyArray_0 <= branch_1_readyArray_1;
	branch_1_dataInArray_1 <= fork_9_dataOutArray_0;
	branchC_3_pValidArray_1 <= fork_9_validArray_1;
	fork_9_nReadyArray_1 <= branchC_3_readyArray_1;
	branchC_3_dataInArray_1 <= fork_9_dataOutArray_1;

	phiC_1_clk <= clk;
	phiC_1_rst <= rst;
	ret_0_pValidArray_0 <= phiC_1_validArray_0;
	phiC_1_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= phiC_1_dataOutArray_0;

	sink_0_clk <= clk;
	sink_0_rst <= rst;

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	sink_2_clk <= clk;
	sink_2_rst <= rst;

	source_0_clk <= clk;
	source_0_rst <= rst;
	cst_1_pValidArray_0 <= source_0_validArray_0;
	source_0_nReadyArray_0 <= cst_1_readyArray_0;
	cst_1_dataInArray_0 <= "00000000000000000000000000000001";

	source_1_clk <= clk;
	source_1_rst <= rst;
	cst_2_pValidArray_0 <= source_1_validArray_0;
	source_1_nReadyArray_0 <= cst_2_readyArray_0;
	cst_2_dataInArray_0 <= "00000000000000000000000001100100";

	buffI_0_clk <= clk;
	buffI_0_rst <= rst;
	fork_0_pValidArray_0 <= buffI_0_validArray_0;
	buffI_0_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= buffI_0_dataOutArray_0;

	buffA_1_clk <= clk;
	buffA_1_rst <= rst;
	forkC_8_pValidArray_0 <= buffA_1_validArray_0;
	buffA_1_nReadyArray_0 <= forkC_8_readyArray_0;
	forkC_8_dataInArray_0 <= buffA_1_dataOutArray_0;

brCst_block1: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => brCst_block1_clk,
	rst => brCst_block1_rst,
	dataInArray(0) => brCst_block1_dataInArray_0,
	pValidArray(0) => brCst_block1_pValidArray_0,
	readyArray(0) => brCst_block1_readyArray_0,
	nReadyArray(0) => brCst_block1_nReadyArray_0,
	validArray(0) => brCst_block1_validArray_0,
	dataOutArray(0) => brCst_block1_dataOutArray_0
);

cst_0: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_0_clk,
	rst => cst_0_rst,
	dataInArray(0) => cst_0_dataInArray_0,
	pValidArray(0) => cst_0_pValidArray_0,
	readyArray(0) => cst_0_readyArray_0,
	nReadyArray(0) => cst_0_nReadyArray_0,
	validArray(0) => cst_0_validArray_0,
	dataOutArray(0) => cst_0_dataOutArray_0
);

phi_1: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_1_clk,
	rst => phi_1_rst,
	Condition(0) => phi_1_dataInArray_0,
	dataInArray(0) => phi_1_dataInArray_1,
	dataInArray(1) => phi_1_dataInArray_2,
	pValidArray(0) => phi_1_pValidArray_0,
	pValidArray(1) => phi_1_pValidArray_1,
	pValidArray(2) => phi_1_pValidArray_2,
	readyArray(0) => phi_1_readyArray_0,
	readyArray(1) => phi_1_readyArray_1,
	readyArray(2) => phi_1_readyArray_2,
	nReadyArray(0) => phi_1_nReadyArray_0,
	validArray(0) => phi_1_validArray_0,
	dataOutArray(0) => phi_1_dataOutArray_0
);

load_4: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_4_clk,
	rst => load_4_rst,
	dataInArray(0) => load_4_dataInArray_0,
	input_addr => load_4_dataInArray_1,
	pValidArray(0) => load_4_pValidArray_0,
	pValidArray(1) => load_4_pValidArray_1,
	readyArray(0) => load_4_readyArray_0,
	readyArray(1) => load_4_readyArray_1,
	nReadyArray(0) => load_4_nReadyArray_0,
	nReadyArray(1) => load_4_nReadyArray_1,
	validArray(0) => load_4_validArray_0,
	validArray(1) => load_4_validArray_1,
	dataOutArray(0) => load_4_dataOutArray_0,
	output_addr => load_4_dataOutArray_1
);

load_7: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_7_clk,
	rst => load_7_rst,
	dataInArray(0) => load_7_dataInArray_0,
	input_addr => load_7_dataInArray_1,
	pValidArray(0) => load_7_pValidArray_0,
	pValidArray(1) => load_7_pValidArray_1,
	readyArray(0) => load_7_readyArray_0,
	readyArray(1) => load_7_readyArray_1,
	nReadyArray(0) => load_7_nReadyArray_0,
	nReadyArray(1) => load_7_nReadyArray_1,
	validArray(0) => load_7_validArray_0,
	validArray(1) => load_7_validArray_1,
	dataOutArray(0) => load_7_dataOutArray_0,
	output_addr => load_7_dataOutArray_1
);

load_10: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_10_clk,
	rst => load_10_rst,
	dataInArray(0) => load_10_dataInArray_0,
	input_addr => load_10_dataInArray_1,
	pValidArray(0) => load_10_pValidArray_0,
	pValidArray(1) => load_10_pValidArray_1,
	readyArray(0) => load_10_readyArray_0,
	readyArray(1) => load_10_readyArray_1,
	nReadyArray(0) => load_10_nReadyArray_0,
	nReadyArray(1) => load_10_nReadyArray_1,
	validArray(0) => load_10_validArray_0,
	validArray(1) => load_10_validArray_1,
	dataOutArray(0) => load_10_dataOutArray_0,
	output_addr => load_10_dataOutArray_1
);

mul_11: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_11_clk,
	rst => mul_11_rst,
	dataInArray(0) => mul_11_dataInArray_0,
	dataInArray(1) => mul_11_dataInArray_1,
	pValidArray(0) => mul_11_pValidArray_0,
	pValidArray(1) => mul_11_pValidArray_1,
	readyArray(0) => mul_11_readyArray_0,
	readyArray(1) => mul_11_readyArray_1,
	nReadyArray(0) => mul_11_nReadyArray_0,
	validArray(0) => mul_11_validArray_0,
	dataOutArray(0) => mul_11_dataOutArray_0
);

store_0: entity work.mc_store_op(arch) generic map (2,2,32,32)
port map (
	clk => store_0_clk,
	rst => store_0_rst,
	dataInArray(0) => store_0_dataInArray_0,
	input_addr => store_0_dataInArray_1,
	pValidArray(0) => store_0_pValidArray_0,
	pValidArray(1) => store_0_pValidArray_1,
	readyArray(0) => store_0_readyArray_0,
	readyArray(1) => store_0_readyArray_1,
	nReadyArray(0) => store_0_nReadyArray_0,
	nReadyArray(1) => store_0_nReadyArray_1,
	validArray(0) => store_0_validArray_0,
	validArray(1) => store_0_validArray_1,
	dataOutArray(0) => store_0_dataOutArray_0,
	output_addr => store_0_dataOutArray_1
);

cst_1: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_1_clk,
	rst => cst_1_rst,
	dataInArray(0) => cst_1_dataInArray_0,
	pValidArray(0) => cst_1_pValidArray_0,
	readyArray(0) => cst_1_readyArray_0,
	nReadyArray(0) => cst_1_nReadyArray_0,
	validArray(0) => cst_1_validArray_0,
	dataOutArray(0) => cst_1_dataOutArray_0
);

add_14: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_14_clk,
	rst => add_14_rst,
	dataInArray(0) => add_14_dataInArray_0,
	dataInArray(1) => add_14_dataInArray_1,
	pValidArray(0) => add_14_pValidArray_0,
	pValidArray(1) => add_14_pValidArray_1,
	readyArray(0) => add_14_readyArray_0,
	readyArray(1) => add_14_readyArray_1,
	nReadyArray(0) => add_14_nReadyArray_0,
	validArray(0) => add_14_validArray_0,
	dataOutArray(0) => add_14_dataOutArray_0
);

cst_2: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_2_clk,
	rst => cst_2_rst,
	dataInArray(0) => cst_2_dataInArray_0,
	pValidArray(0) => cst_2_pValidArray_0,
	readyArray(0) => cst_2_readyArray_0,
	nReadyArray(0) => cst_2_nReadyArray_0,
	validArray(0) => cst_2_validArray_0,
	dataOutArray(0) => cst_2_dataOutArray_0
);

icmp_15: entity work.icmp_ult_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_15_clk,
	rst => icmp_15_rst,
	dataInArray(0) => icmp_15_dataInArray_0,
	dataInArray(1) => icmp_15_dataInArray_1,
	pValidArray(0) => icmp_15_pValidArray_0,
	pValidArray(1) => icmp_15_pValidArray_1,
	readyArray(0) => icmp_15_readyArray_0,
	readyArray(1) => icmp_15_readyArray_1,
	nReadyArray(0) => icmp_15_nReadyArray_0,
	validArray(0) => icmp_15_validArray_0,
	dataOutArray(0) => icmp_15_dataOutArray_0
);

ret_0: entity work.ret_op(arch) generic map (1,1,1,1)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

fork_0: entity work.fork(arch) generic map (1,3,32,32)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	nReadyArray(2) => fork_0_nReadyArray_2,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	validArray(2) => fork_0_validArray_2,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1,
	dataOutArray(2) => fork_0_dataOutArray_2
);

fork_1: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_1_clk,
	rst => fork_1_rst,
	dataInArray(0) => fork_1_dataInArray_0,
	pValidArray(0) => fork_1_pValidArray_0,
	readyArray(0) => fork_1_readyArray_0,
	nReadyArray(0) => fork_1_nReadyArray_0,
	nReadyArray(1) => fork_1_nReadyArray_1,
	validArray(0) => fork_1_validArray_0,
	validArray(1) => fork_1_validArray_1,
	dataOutArray(0) => fork_1_dataOutArray_0,
	dataOutArray(1) => fork_1_dataOutArray_1
);

fork_2: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_2_clk,
	rst => fork_2_rst,
	dataInArray(0) => fork_2_dataInArray_0,
	pValidArray(0) => fork_2_pValidArray_0,
	readyArray(0) => fork_2_readyArray_0,
	nReadyArray(0) => fork_2_nReadyArray_0,
	nReadyArray(1) => fork_2_nReadyArray_1,
	validArray(0) => fork_2_validArray_0,
	validArray(1) => fork_2_validArray_1,
	dataOutArray(0) => fork_2_dataOutArray_0,
	dataOutArray(1) => fork_2_dataOutArray_1
);

branch_0: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_0_clk,
	rst => branch_0_rst,
	dataInArray(0) => branch_0_dataInArray_0,
	Condition(0) => branch_0_dataInArray_1,
	pValidArray(0) => branch_0_pValidArray_0,
	pValidArray(1) => branch_0_pValidArray_1,
	readyArray(0) => branch_0_readyArray_0,
	readyArray(1) => branch_0_readyArray_1,
	nReadyArray(0) => branch_0_nReadyArray_0,
	nReadyArray(1) => branch_0_nReadyArray_1,
	validArray(0) => branch_0_validArray_0,
	validArray(1) => branch_0_validArray_1,
	dataOutArray(0) => branch_0_dataOutArray_0,
	dataOutArray(1) => branch_0_dataOutArray_1
);

branch_1: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_1_clk,
	rst => branch_1_rst,
	dataInArray(0) => branch_1_dataInArray_0,
	Condition(0) => branch_1_dataInArray_1,
	pValidArray(0) => branch_1_pValidArray_0,
	pValidArray(1) => branch_1_pValidArray_1,
	readyArray(0) => branch_1_readyArray_0,
	readyArray(1) => branch_1_readyArray_1,
	nReadyArray(0) => branch_1_nReadyArray_0,
	nReadyArray(1) => branch_1_nReadyArray_1,
	validArray(0) => branch_1_validArray_0,
	validArray(1) => branch_1_validArray_1,
	dataOutArray(0) => branch_1_dataOutArray_0,
	dataOutArray(1) => branch_1_dataOutArray_1
);

MC_x: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_x_clk,
	rst => MC_x_rst,
	io_storeDataOut => x_dout0,
	io_storeAddrOut => x_address0,
	io_storeEnable => MC_x_we0_ce0,
	io_loadDataIn => x_din1,
	io_loadAddrOut => x_address1,
	io_loadEnable => x_ce1,
	io_bbReadyToPrevs(0) => MC_x_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_x_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_x_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_x_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_x_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_x_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_x_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_x_readyArray_3,
	io_wrDataPorts_valid(0) => MC_x_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_x_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_x_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_x_validArray_0,
	io_rdPortsNext_bits(0) => MC_x_dataOutArray_0,
	io_Empty_Valid => MC_x_validArray_1,
	io_Empty_Ready => MC_x_nReadyArray_1

);

MC_a: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_a_clk,
	rst => MC_a_rst,
	io_storeDataOut => a_dout0,
	io_storeAddrOut => a_address0,
	io_storeEnable => MC_a_we0_ce0,
	io_loadDataIn => a_din1,
	io_loadAddrOut => a_address1,
	io_loadEnable => a_ce1,
	io_bbReadyToPrevs(0) => MC_a_readyArray_0,
	io_bbpValids(0) => MC_a_pValidArray_0,
	io_bb_stCountArray(0) => MC_a_dataInArray_0,
	io_rdPortsPrev_ready(0) => MC_a_readyArray_1,
	io_rdPortsPrev_valid(0) => MC_a_pValidArray_1,
	io_rdPortsPrev_bits(0) => MC_a_dataInArray_1,
	io_wrAddrPorts_ready(0) => MC_a_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_a_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_a_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_a_readyArray_3,
	io_wrDataPorts_valid(0) => MC_a_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_a_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_a_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_a_validArray_0,
	io_rdPortsNext_bits(0) => MC_a_dataOutArray_0,
	io_Empty_Valid => MC_a_validArray_1,
	io_Empty_Ready => MC_a_nReadyArray_1

);

MC_w: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_w_clk,
	rst => MC_w_rst,
	io_storeDataOut => w_dout0,
	io_storeAddrOut => w_address0,
	io_storeEnable => MC_w_we0_ce0,
	io_loadDataIn => w_din1,
	io_loadAddrOut => w_address1,
	io_loadEnable => w_ce1,
	io_bbReadyToPrevs(0) => MC_w_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_w_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_w_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_w_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_w_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_w_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_w_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_w_readyArray_3,
	io_wrDataPorts_valid(0) => MC_w_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_w_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_w_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_w_validArray_0,
	io_rdPortsNext_bits(0) => MC_w_dataOutArray_0,
	io_Empty_Valid => MC_w_validArray_1,
	io_Empty_Ready => MC_w_nReadyArray_1

);

cst_3: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_3_clk,
	rst => cst_3_rst,
	dataInArray(0) => cst_3_dataInArray_0,
	pValidArray(0) => cst_3_pValidArray_0,
	readyArray(0) => cst_3_readyArray_0,
	nReadyArray(0) => cst_3_nReadyArray_0,
	validArray(0) => cst_3_validArray_0,
	dataOutArray(0) => cst_3_dataOutArray_0
);

end_0: entity work.end_node(arch) generic map (1,3,1,0,1)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_3,
	eValidArray(0) => end_0_pValidArray_0,
	eValidArray(1) => end_0_pValidArray_1,
	eValidArray(2) => end_0_pValidArray_2,
	pValidArray(0) => end_0_pValidArray_3,
	eReadyArray(0) => end_0_readyArray_0,
	eReadyArray(1) => end_0_readyArray_1,
	eReadyArray(2) => end_0_readyArray_2,
	readyArray(0) => end_0_readyArray_3,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

forkC_6: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => forkC_6_clk,
	rst => forkC_6_rst,
	dataInArray(0) => forkC_6_dataInArray_0,
	pValidArray(0) => forkC_6_pValidArray_0,
	readyArray(0) => forkC_6_readyArray_0,
	nReadyArray(0) => forkC_6_nReadyArray_0,
	nReadyArray(1) => forkC_6_nReadyArray_1,
	nReadyArray(2) => forkC_6_nReadyArray_2,
	validArray(0) => forkC_6_validArray_0,
	validArray(1) => forkC_6_validArray_1,
	validArray(2) => forkC_6_validArray_2,
	dataOutArray(0) => forkC_6_dataOutArray_0,
	dataOutArray(1) => forkC_6_dataOutArray_1,
	dataOutArray(2) => forkC_6_dataOutArray_2
);

branchC_2: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_2_clk,
	rst => branchC_2_rst,
	dataInArray(0) => branchC_2_dataInArray_0,
	Condition(0) => branchC_2_dataInArray_1,
	pValidArray(0) => branchC_2_pValidArray_0,
	pValidArray(1) => branchC_2_pValidArray_1,
	readyArray(0) => branchC_2_readyArray_0,
	readyArray(1) => branchC_2_readyArray_1,
	nReadyArray(0) => branchC_2_nReadyArray_0,
	nReadyArray(1) => branchC_2_nReadyArray_1,
	validArray(0) => branchC_2_validArray_0,
	validArray(1) => branchC_2_validArray_1,
	dataOutArray(0) => branchC_2_dataOutArray_0,
	dataOutArray(1) => branchC_2_dataOutArray_1
);

fork_7: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork_7_clk,
	rst => fork_7_rst,
	dataInArray(0) => fork_7_dataInArray_0,
	pValidArray(0) => fork_7_pValidArray_0,
	readyArray(0) => fork_7_readyArray_0,
	nReadyArray(0) => fork_7_nReadyArray_0,
	nReadyArray(1) => fork_7_nReadyArray_1,
	validArray(0) => fork_7_validArray_0,
	validArray(1) => fork_7_validArray_1,
	dataOutArray(0) => fork_7_dataOutArray_0,
	dataOutArray(1) => fork_7_dataOutArray_1
);

phiC_0: entity work.CntrlMerge(arch) generic map (2,2,1,1,1)
port map (
	clk => phiC_0_clk,
	rst => phiC_0_rst,
	dataInArray(0) => phiC_0_dataInArray_0,
	dataInArray(1) => phiC_0_dataInArray_1,
	pValidArray(0) => phiC_0_pValidArray_0,
	pValidArray(1) => phiC_0_pValidArray_1,
	readyArray(0) => phiC_0_readyArray_0,
	readyArray(1) => phiC_0_readyArray_1,
	nReadyArray(0) => phiC_0_nReadyArray_0,
	nReadyArray(1) => phiC_0_nReadyArray_1,
	validArray(0) => phiC_0_validArray_0,
	validArray(1) => phiC_0_validArray_1,
	dataOutArray(0) => phiC_0_dataOutArray_0,
	Condition(0) => phiC_0_dataOutArray_1
);

forkC_8: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => forkC_8_clk,
	rst => forkC_8_rst,
	dataInArray(0) => forkC_8_dataInArray_0,
	pValidArray(0) => forkC_8_pValidArray_0,
	readyArray(0) => forkC_8_readyArray_0,
	nReadyArray(0) => forkC_8_nReadyArray_0,
	nReadyArray(1) => forkC_8_nReadyArray_1,
	validArray(0) => forkC_8_validArray_0,
	validArray(1) => forkC_8_validArray_1,
	dataOutArray(0) => forkC_8_dataOutArray_0,
	dataOutArray(1) => forkC_8_dataOutArray_1
);

branchC_3: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_3_clk,
	rst => branchC_3_rst,
	dataInArray(0) => branchC_3_dataInArray_0,
	Condition(0) => branchC_3_dataInArray_1,
	pValidArray(0) => branchC_3_pValidArray_0,
	pValidArray(1) => branchC_3_pValidArray_1,
	readyArray(0) => branchC_3_readyArray_0,
	readyArray(1) => branchC_3_readyArray_1,
	nReadyArray(0) => branchC_3_nReadyArray_0,
	nReadyArray(1) => branchC_3_nReadyArray_1,
	validArray(0) => branchC_3_validArray_0,
	validArray(1) => branchC_3_validArray_1,
	dataOutArray(0) => branchC_3_dataOutArray_0,
	dataOutArray(1) => branchC_3_dataOutArray_1
);

fork_9: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork_9_clk,
	rst => fork_9_rst,
	dataInArray(0) => fork_9_dataInArray_0,
	pValidArray(0) => fork_9_pValidArray_0,
	readyArray(0) => fork_9_readyArray_0,
	nReadyArray(0) => fork_9_nReadyArray_0,
	nReadyArray(1) => fork_9_nReadyArray_1,
	validArray(0) => fork_9_validArray_0,
	validArray(1) => fork_9_validArray_1,
	dataOutArray(0) => fork_9_dataOutArray_0,
	dataOutArray(1) => fork_9_dataOutArray_1
);

phiC_1: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_1_clk,
	rst => phiC_1_rst,
	dataInArray(0) => phiC_1_dataInArray_0,
	pValidArray(0) => phiC_1_pValidArray_0,
	readyArray(0) => phiC_1_readyArray_0,
	nReadyArray(0) => phiC_1_nReadyArray_0,
	validArray(0) => phiC_1_validArray_0,
	dataOutArray(0) => phiC_1_dataOutArray_0
);

sink_0: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_0_clk,
	rst => sink_0_rst,
	dataInArray(0) => sink_0_dataInArray_0,
	pValidArray(0) => sink_0_pValidArray_0,
	readyArray(0) => sink_0_readyArray_0
);

sink_1: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

sink_2: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_2_clk,
	rst => sink_2_rst,
	dataInArray(0) => sink_2_dataInArray_0,
	pValidArray(0) => sink_2_pValidArray_0,
	readyArray(0) => sink_2_readyArray_0
);

source_0: entity work.source(arch) generic map (0,1,32,32)
port map (
	clk => source_0_clk,
	rst => source_0_rst,
	nReadyArray(0) => source_0_nReadyArray_0,
	validArray(0) => source_0_validArray_0,
	dataOutArray(0) => source_0_dataOutArray_0
);

source_1: entity work.source(arch) generic map (0,1,32,32)
port map (
	clk => source_1_clk,
	rst => source_1_rst,
	nReadyArray(0) => source_1_nReadyArray_0,
	validArray(0) => source_1_validArray_0,
	dataOutArray(0) => source_1_dataOutArray_0
);

buffI_0: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffI_0_clk,
	rst => buffI_0_rst,
	dataInArray(0) => buffI_0_dataInArray_0,
	pValidArray(0) => buffI_0_pValidArray_0,
	readyArray(0) => buffI_0_readyArray_0,
	nReadyArray(0) => buffI_0_nReadyArray_0,
	validArray(0) => buffI_0_validArray_0,
	dataOutArray(0) => buffI_0_dataOutArray_0
);

buffA_1: entity work.elasticBuffer(arch) generic map (1,1,1,1)
port map (
	clk => buffA_1_clk,
	rst => buffA_1_rst,
	dataInArray(0) => buffA_1_dataInArray_0,
	pValidArray(0) => buffA_1_pValidArray_0,
	readyArray(0) => buffA_1_readyArray_0,
	nReadyArray(0) => buffA_1_nReadyArray_0,
	validArray(0) => buffA_1_validArray_0,
	dataOutArray(0) => buffA_1_dataOutArray_0
);

end behavioral; 
