-- ==============================================================
-- Generated by Dot2Vhdl ver. 0.21
-- File created: Thu Feb  6 15:40:15 2020

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity example is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (0 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic);
end;

architecture behavioral of example is 

	signal brCst_block1_clk : std_logic;
	signal brCst_block1_rst : std_logic;
	signal brCst_block1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal brCst_block1_pValidArray_0 : std_logic;
	signal brCst_block1_readyArray_0 : std_logic;
	signal brCst_block1_nReadyArray_0 : std_logic;
	signal brCst_block1_validArray_0 : std_logic;
	signal brCst_block1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_0_clk : std_logic;
	signal cst_0_rst : std_logic;
	signal cst_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_0_pValidArray_0 : std_logic;
	signal cst_0_readyArray_0 : std_logic;
	signal cst_0_nReadyArray_0 : std_logic;
	signal cst_0_validArray_0 : std_logic;
	signal cst_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_1_clk : std_logic;
	signal phi_1_rst : std_logic;
	signal phi_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_1_pValidArray_0 : std_logic;
	signal phi_1_pValidArray_1 : std_logic;
	signal phi_1_pValidArray_2 : std_logic;
	signal phi_1_readyArray_0 : std_logic;
	signal phi_1_readyArray_1 : std_logic;
	signal phi_1_readyArray_2 : std_logic;
	signal phi_1_nReadyArray_0 : std_logic;
	signal phi_1_validArray_0 : std_logic;
	signal phi_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_1_clk : std_logic;
	signal cst_1_rst : std_logic;
	signal cst_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_1_pValidArray_0 : std_logic;
	signal cst_1_readyArray_0 : std_logic;
	signal cst_1_nReadyArray_0 : std_logic;
	signal cst_1_validArray_0 : std_logic;
	signal cst_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal add_2_clk : std_logic;
	signal add_2_rst : std_logic;
	signal add_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_2_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_2_pValidArray_0 : std_logic;
	signal add_2_pValidArray_1 : std_logic;
	signal add_2_readyArray_0 : std_logic;
	signal add_2_readyArray_1 : std_logic;
	signal add_2_nReadyArray_0 : std_logic;
	signal add_2_validArray_0 : std_logic;
	signal add_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_2_clk : std_logic;
	signal cst_2_rst : std_logic;
	signal cst_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cst_2_pValidArray_0 : std_logic;
	signal cst_2_readyArray_0 : std_logic;
	signal cst_2_nReadyArray_0 : std_logic;
	signal cst_2_validArray_0 : std_logic;
	signal cst_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_3_clk : std_logic;
	signal icmp_3_rst : std_logic;
	signal icmp_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_3_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_3_pValidArray_0 : std_logic;
	signal icmp_3_pValidArray_1 : std_logic;
	signal icmp_3_readyArray_0 : std_logic;
	signal icmp_3_readyArray_1 : std_logic;
	signal icmp_3_nReadyArray_0 : std_logic;
	signal icmp_3_validArray_0 : std_logic;
	signal icmp_3_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_0_clk : std_logic;
	signal branch_0_rst : std_logic;
	signal branch_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_0_pValidArray_0 : std_logic;
	signal branch_0_pValidArray_1 : std_logic;
	signal branch_0_readyArray_0 : std_logic;
	signal branch_0_readyArray_1 : std_logic;
	signal branch_0_nReadyArray_0 : std_logic;
	signal branch_0_validArray_0 : std_logic;
	signal branch_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_0_nReadyArray_1 : std_logic;
	signal branch_0_validArray_1 : std_logic;
	signal branch_0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_1_clk : std_logic;
	signal branch_1_rst : std_logic;
	signal branch_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_1_pValidArray_0 : std_logic;
	signal branch_1_pValidArray_1 : std_logic;
	signal branch_1_readyArray_0 : std_logic;
	signal branch_1_readyArray_1 : std_logic;
	signal branch_1_nReadyArray_0 : std_logic;
	signal branch_1_validArray_0 : std_logic;
	signal branch_1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_1_nReadyArray_1 : std_logic;
	signal branch_1_validArray_1 : std_logic;
	signal branch_1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal forkC_4_clk : std_logic;
	signal forkC_4_rst : std_logic;
	signal forkC_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_4_pValidArray_0 : std_logic;
	signal forkC_4_readyArray_0 : std_logic;
	signal forkC_4_nReadyArray_0 : std_logic;
	signal forkC_4_validArray_0 : std_logic;
	signal forkC_4_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_4_nReadyArray_1 : std_logic;
	signal forkC_4_validArray_1 : std_logic;
	signal forkC_4_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_4_nReadyArray_2 : std_logic;
	signal forkC_4_validArray_2 : std_logic;
	signal forkC_4_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal branchC_2_clk : std_logic;
	signal branchC_2_rst : std_logic;
	signal branchC_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_2_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_2_pValidArray_0 : std_logic;
	signal branchC_2_pValidArray_1 : std_logic;
	signal branchC_2_readyArray_0 : std_logic;
	signal branchC_2_readyArray_1 : std_logic;
	signal branchC_2_nReadyArray_0 : std_logic;
	signal branchC_2_validArray_0 : std_logic;
	signal branchC_2_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_2_nReadyArray_1 : std_logic;
	signal branchC_2_validArray_1 : std_logic;
	signal branchC_2_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_5_clk : std_logic;
	signal fork_5_rst : std_logic;
	signal fork_5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_5_pValidArray_0 : std_logic;
	signal fork_5_readyArray_0 : std_logic;
	signal fork_5_nReadyArray_0 : std_logic;
	signal fork_5_validArray_0 : std_logic;
	signal fork_5_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_5_nReadyArray_1 : std_logic;
	signal fork_5_validArray_1 : std_logic;
	signal fork_5_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phiC_0_clk : std_logic;
	signal phiC_0_rst : std_logic;
	signal phiC_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal phiC_0_pValidArray_0 : std_logic;
	signal phiC_0_pValidArray_1 : std_logic;
	signal phiC_0_readyArray_0 : std_logic;
	signal phiC_0_readyArray_1 : std_logic;
	signal phiC_0_nReadyArray_0 : std_logic;
	signal phiC_0_validArray_0 : std_logic;
	signal phiC_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal phiC_0_nReadyArray_1 : std_logic;
	signal phiC_0_validArray_1 : std_logic;
	signal phiC_0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal branchC_3_clk : std_logic;
	signal branchC_3_rst : std_logic;
	signal branchC_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_3_pValidArray_0 : std_logic;
	signal branchC_3_pValidArray_1 : std_logic;
	signal branchC_3_readyArray_0 : std_logic;
	signal branchC_3_readyArray_1 : std_logic;
	signal branchC_3_nReadyArray_0 : std_logic;
	signal branchC_3_validArray_0 : std_logic;
	signal branchC_3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_3_nReadyArray_1 : std_logic;
	signal branchC_3_validArray_1 : std_logic;
	signal branchC_3_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_7_clk : std_logic;
	signal fork_7_rst : std_logic;
	signal fork_7_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_7_pValidArray_0 : std_logic;
	signal fork_7_readyArray_0 : std_logic;
	signal fork_7_nReadyArray_0 : std_logic;
	signal fork_7_validArray_0 : std_logic;
	signal fork_7_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_7_nReadyArray_1 : std_logic;
	signal fork_7_validArray_1 : std_logic;
	signal fork_7_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phiC_1_clk : std_logic;
	signal phiC_1_rst : std_logic;
	signal phiC_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_1_pValidArray_0 : std_logic;
	signal phiC_1_readyArray_0 : std_logic;
	signal phiC_1_nReadyArray_0 : std_logic;
	signal phiC_1_validArray_0 : std_logic;
	signal phiC_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal sink_0_clk : std_logic;
	signal sink_0_rst : std_logic;
	signal sink_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_0_pValidArray_0 : std_logic;
	signal sink_0_readyArray_0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal sink_2_clk : std_logic;
	signal sink_2_rst : std_logic;
	signal sink_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_2_pValidArray_0 : std_logic;
	signal sink_2_readyArray_0 : std_logic;

	signal source_0_clk : std_logic;
	signal source_0_rst : std_logic;
	signal source_0_nReadyArray_0 : std_logic;
	signal source_0_validArray_0 : std_logic;
	signal source_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal source_1_clk : std_logic;
	signal source_1_rst : std_logic;
	signal source_1_nReadyArray_0 : std_logic;
	signal source_1_validArray_0 : std_logic;
	signal source_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffI_0_clk : std_logic;
	signal buffI_0_rst : std_logic;
	signal buffI_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffI_0_pValidArray_0 : std_logic;
	signal buffI_0_readyArray_0 : std_logic;
	signal buffI_0_nReadyArray_0 : std_logic;
	signal buffI_0_validArray_0 : std_logic;
	signal buffI_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffA_1_clk : std_logic;
	signal buffA_1_rst : std_logic;
	signal buffA_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffA_1_pValidArray_0 : std_logic;
	signal buffA_1_readyArray_0 : std_logic;
	signal buffA_1_nReadyArray_0 : std_logic;
	signal buffA_1_validArray_0 : std_logic;
	signal buffA_1_dataOutArray_0 : std_logic_vector(0 downto 0);

begin


	brCst_block1_clk <= clk;
	brCst_block1_rst <= rst;
	fork_5_pValidArray_0 <= brCst_block1_validArray_0;
	brCst_block1_nReadyArray_0 <= fork_5_readyArray_0;
	fork_5_dataInArray_0 <= brCst_block1_dataOutArray_0;

	cst_0_clk <= clk;
	cst_0_rst <= rst;
	branch_0_pValidArray_0 <= cst_0_validArray_0;
	cst_0_nReadyArray_0 <= branch_0_readyArray_0;
	branch_0_dataInArray_0 <= cst_0_dataOutArray_0;

	phi_1_clk <= clk;
	phi_1_rst <= rst;
	buffI_0_pValidArray_0 <= phi_1_validArray_0;
	phi_1_nReadyArray_0 <= buffI_0_readyArray_0;
	buffI_0_dataInArray_0 <= phi_1_dataOutArray_0;

	cst_1_clk <= clk;
	cst_1_rst <= rst;
	add_2_pValidArray_1 <= cst_1_validArray_0;
	cst_1_nReadyArray_0 <= add_2_readyArray_1;
	add_2_dataInArray_1 <= cst_1_dataOutArray_0;

	add_2_clk <= clk;
	add_2_rst <= rst;
	fork_0_pValidArray_0 <= add_2_validArray_0;
	add_2_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= add_2_dataOutArray_0;

	cst_2_clk <= clk;
	cst_2_rst <= rst;
	icmp_3_pValidArray_1 <= cst_2_validArray_0;
	cst_2_nReadyArray_0 <= icmp_3_readyArray_1;
	icmp_3_dataInArray_1 <= cst_2_dataOutArray_0;

	icmp_3_clk <= clk;
	icmp_3_rst <= rst;
	fork_7_pValidArray_0 <= icmp_3_validArray_0;
	icmp_3_nReadyArray_0 <= fork_7_readyArray_0;
	fork_7_dataInArray_0 <= icmp_3_dataOutArray_0;

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_0 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= ret_0_dataOutArray_0;

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	icmp_3_pValidArray_0 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= icmp_3_readyArray_0;
	icmp_3_dataInArray_0 <= fork_0_dataOutArray_0;
	branch_1_pValidArray_0 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= branch_1_readyArray_0;
	branch_1_dataInArray_0 <= fork_0_dataOutArray_1;

	branch_0_clk <= clk;
	branch_0_rst <= rst;
	phi_1_pValidArray_1 <= branch_0_validArray_0;
	branch_0_nReadyArray_0 <= phi_1_readyArray_1;
	phi_1_dataInArray_1 <= branch_0_dataOutArray_0;
	sink_0_pValidArray_0 <= branch_0_validArray_1;
	branch_0_nReadyArray_1 <= sink_0_readyArray_0;
	sink_0_dataInArray_0 <= branch_0_dataOutArray_1;

	branch_1_clk <= clk;
	branch_1_rst <= rst;
	phi_1_pValidArray_2 <= branch_1_validArray_0;
	branch_1_nReadyArray_0 <= phi_1_readyArray_2;
	phi_1_dataInArray_2 <= branch_1_dataOutArray_0;
	sink_1_pValidArray_0 <= branch_1_validArray_1;
	branch_1_nReadyArray_1 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= branch_1_dataOutArray_1;

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	forkC_4_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= forkC_4_readyArray_0;
	forkC_4_dataInArray_0 <= start_0_dataOutArray_0;

	forkC_4_clk <= clk;
	forkC_4_rst <= rst;
	cst_0_pValidArray_0 <= forkC_4_validArray_0;
	forkC_4_nReadyArray_0 <= cst_0_readyArray_0;
	cst_0_dataInArray_0 <= "00000000000000000000000000000000";
	branchC_2_pValidArray_0 <= forkC_4_validArray_1;
	forkC_4_nReadyArray_1 <= branchC_2_readyArray_0;
	branchC_2_dataInArray_0 <= forkC_4_dataOutArray_1;
	brCst_block1_pValidArray_0 <= forkC_4_validArray_2;
	forkC_4_nReadyArray_2 <= brCst_block1_readyArray_0;
	brCst_block1_dataInArray_0 <= "1";

	branchC_2_clk <= clk;
	branchC_2_rst <= rst;
	phiC_0_pValidArray_0 <= branchC_2_validArray_0;
	branchC_2_nReadyArray_0 <= phiC_0_readyArray_0;
	phiC_0_dataInArray_0 <= branchC_2_dataOutArray_0;
	sink_2_pValidArray_0 <= branchC_2_validArray_1;
	branchC_2_nReadyArray_1 <= sink_2_readyArray_0;
	sink_2_dataInArray_0 <= branchC_2_dataOutArray_1;

	fork_5_clk <= clk;
	fork_5_rst <= rst;
	branch_0_pValidArray_1 <= fork_5_validArray_0;
	fork_5_nReadyArray_0 <= branch_0_readyArray_1;
	branch_0_dataInArray_1 <= fork_5_dataOutArray_0;
	branchC_2_pValidArray_1 <= fork_5_validArray_1;
	fork_5_nReadyArray_1 <= branchC_2_readyArray_1;
	branchC_2_dataInArray_1 <= fork_5_dataOutArray_1;

	phiC_0_clk <= clk;
	phiC_0_rst <= rst;
	buffA_1_pValidArray_0 <= phiC_0_validArray_0;
	phiC_0_nReadyArray_0 <= buffA_1_readyArray_0;
	buffA_1_dataInArray_0 <= phiC_0_dataOutArray_0;
	phi_1_pValidArray_0 <= phiC_0_validArray_1;
	phiC_0_nReadyArray_1 <= phi_1_readyArray_0;
	phi_1_dataInArray_0 <= phiC_0_dataOutArray_1;

	branchC_3_clk <= clk;
	branchC_3_rst <= rst;
	phiC_0_pValidArray_1 <= branchC_3_validArray_0;
	branchC_3_nReadyArray_0 <= phiC_0_readyArray_1;
	phiC_0_dataInArray_1 <= branchC_3_dataOutArray_0;
	phiC_1_pValidArray_0 <= branchC_3_validArray_1;
	branchC_3_nReadyArray_1 <= phiC_1_readyArray_0;
	phiC_1_dataInArray_0 <= branchC_3_dataOutArray_1;

	fork_7_clk <= clk;
	fork_7_rst <= rst;
	branch_1_pValidArray_1 <= fork_7_validArray_0;
	fork_7_nReadyArray_0 <= branch_1_readyArray_1;
	branch_1_dataInArray_1 <= fork_7_dataOutArray_0;
	branchC_3_pValidArray_1 <= fork_7_validArray_1;
	fork_7_nReadyArray_1 <= branchC_3_readyArray_1;
	branchC_3_dataInArray_1 <= fork_7_dataOutArray_1;

	phiC_1_clk <= clk;
	phiC_1_rst <= rst;
	ret_0_pValidArray_0 <= phiC_1_validArray_0;
	phiC_1_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= phiC_1_dataOutArray_0;

	sink_0_clk <= clk;
	sink_0_rst <= rst;

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	sink_2_clk <= clk;
	sink_2_rst <= rst;

	source_0_clk <= clk;
	source_0_rst <= rst;
	cst_1_pValidArray_0 <= source_0_validArray_0;
	source_0_nReadyArray_0 <= cst_1_readyArray_0;
	cst_1_dataInArray_0 <= "00000000000000000000000000000001";

	source_1_clk <= clk;
	source_1_rst <= rst;
	cst_2_pValidArray_0 <= source_1_validArray_0;
	source_1_nReadyArray_0 <= cst_2_readyArray_0;
	cst_2_dataInArray_0 <= "00000000000000000000000001100100";

	buffI_0_clk <= clk;
	buffI_0_rst <= rst;
	add_2_pValidArray_0 <= buffI_0_validArray_0;
	buffI_0_nReadyArray_0 <= add_2_readyArray_0;
	add_2_dataInArray_0 <= buffI_0_dataOutArray_0;

	buffA_1_clk <= clk;
	buffA_1_rst <= rst;
	branchC_3_pValidArray_0 <= buffA_1_validArray_0;
	buffA_1_nReadyArray_0 <= branchC_3_readyArray_0;
	branchC_3_dataInArray_0 <= buffA_1_dataOutArray_0;

brCst_block1: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => brCst_block1_clk,
	rst => brCst_block1_rst,
	dataInArray(0) => brCst_block1_dataInArray_0,
	pValidArray(0) => brCst_block1_pValidArray_0,
	readyArray(0) => brCst_block1_readyArray_0,
	nReadyArray(0) => brCst_block1_nReadyArray_0,
	validArray(0) => brCst_block1_validArray_0,
	dataOutArray(0) => brCst_block1_dataOutArray_0
);

cst_0: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_0_clk,
	rst => cst_0_rst,
	dataInArray(0) => cst_0_dataInArray_0,
	pValidArray(0) => cst_0_pValidArray_0,
	readyArray(0) => cst_0_readyArray_0,
	nReadyArray(0) => cst_0_nReadyArray_0,
	validArray(0) => cst_0_validArray_0,
	dataOutArray(0) => cst_0_dataOutArray_0
);

phi_1: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_1_clk,
	rst => phi_1_rst,
	Condition(0) => phi_1_dataInArray_0,
	dataInArray(0) => phi_1_dataInArray_1,
	dataInArray(1) => phi_1_dataInArray_2,
	pValidArray(0) => phi_1_pValidArray_0,
	pValidArray(1) => phi_1_pValidArray_1,
	pValidArray(2) => phi_1_pValidArray_2,
	readyArray(0) => phi_1_readyArray_0,
	readyArray(1) => phi_1_readyArray_1,
	readyArray(2) => phi_1_readyArray_2,
	nReadyArray(0) => phi_1_nReadyArray_0,
	validArray(0) => phi_1_validArray_0,
	dataOutArray(0) => phi_1_dataOutArray_0
);

cst_1: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_1_clk,
	rst => cst_1_rst,
	dataInArray(0) => cst_1_dataInArray_0,
	pValidArray(0) => cst_1_pValidArray_0,
	readyArray(0) => cst_1_readyArray_0,
	nReadyArray(0) => cst_1_nReadyArray_0,
	validArray(0) => cst_1_validArray_0,
	dataOutArray(0) => cst_1_dataOutArray_0
);

add_2: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_2_clk,
	rst => add_2_rst,
	dataInArray(0) => add_2_dataInArray_0,
	dataInArray(1) => add_2_dataInArray_1,
	pValidArray(0) => add_2_pValidArray_0,
	pValidArray(1) => add_2_pValidArray_1,
	readyArray(0) => add_2_readyArray_0,
	readyArray(1) => add_2_readyArray_1,
	nReadyArray(0) => add_2_nReadyArray_0,
	validArray(0) => add_2_validArray_0,
	dataOutArray(0) => add_2_dataOutArray_0
);

cst_2: entity work.Const(arch) generic map (1,1,32,32)
port map (
	clk => cst_2_clk,
	rst => cst_2_rst,
	dataInArray(0) => cst_2_dataInArray_0,
	pValidArray(0) => cst_2_pValidArray_0,
	readyArray(0) => cst_2_readyArray_0,
	nReadyArray(0) => cst_2_nReadyArray_0,
	validArray(0) => cst_2_validArray_0,
	dataOutArray(0) => cst_2_dataOutArray_0
);

icmp_3: entity work.icmp_ult_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_3_clk,
	rst => icmp_3_rst,
	dataInArray(0) => icmp_3_dataInArray_0,
	dataInArray(1) => icmp_3_dataInArray_1,
	pValidArray(0) => icmp_3_pValidArray_0,
	pValidArray(1) => icmp_3_pValidArray_1,
	readyArray(0) => icmp_3_readyArray_0,
	readyArray(1) => icmp_3_readyArray_1,
	nReadyArray(0) => icmp_3_nReadyArray_0,
	validArray(0) => icmp_3_validArray_0,
	dataOutArray(0) => icmp_3_dataOutArray_0
);

ret_0: entity work.ret_op(arch) generic map (1,1,1,1)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

fork_0: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1
);

branch_0: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_0_clk,
	rst => branch_0_rst,
	dataInArray(0) => branch_0_dataInArray_0,
	Condition(0) => branch_0_dataInArray_1,
	pValidArray(0) => branch_0_pValidArray_0,
	pValidArray(1) => branch_0_pValidArray_1,
	readyArray(0) => branch_0_readyArray_0,
	readyArray(1) => branch_0_readyArray_1,
	nReadyArray(0) => branch_0_nReadyArray_0,
	nReadyArray(1) => branch_0_nReadyArray_1,
	validArray(0) => branch_0_validArray_0,
	validArray(1) => branch_0_validArray_1,
	dataOutArray(0) => branch_0_dataOutArray_0,
	dataOutArray(1) => branch_0_dataOutArray_1
);

branch_1: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_1_clk,
	rst => branch_1_rst,
	dataInArray(0) => branch_1_dataInArray_0,
	Condition(0) => branch_1_dataInArray_1,
	pValidArray(0) => branch_1_pValidArray_0,
	pValidArray(1) => branch_1_pValidArray_1,
	readyArray(0) => branch_1_readyArray_0,
	readyArray(1) => branch_1_readyArray_1,
	nReadyArray(0) => branch_1_nReadyArray_0,
	nReadyArray(1) => branch_1_nReadyArray_1,
	validArray(0) => branch_1_validArray_0,
	validArray(1) => branch_1_validArray_1,
	dataOutArray(0) => branch_1_dataOutArray_0,
	dataOutArray(1) => branch_1_dataOutArray_1
);

end_0: entity work.end_node(arch) generic map (1,0,1,1,1)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_0,
	pValidArray(0) => end_0_pValidArray_0,
	readyArray(0) => end_0_readyArray_0,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

forkC_4: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => forkC_4_clk,
	rst => forkC_4_rst,
	dataInArray(0) => forkC_4_dataInArray_0,
	pValidArray(0) => forkC_4_pValidArray_0,
	readyArray(0) => forkC_4_readyArray_0,
	nReadyArray(0) => forkC_4_nReadyArray_0,
	nReadyArray(1) => forkC_4_nReadyArray_1,
	nReadyArray(2) => forkC_4_nReadyArray_2,
	validArray(0) => forkC_4_validArray_0,
	validArray(1) => forkC_4_validArray_1,
	validArray(2) => forkC_4_validArray_2,
	dataOutArray(0) => forkC_4_dataOutArray_0,
	dataOutArray(1) => forkC_4_dataOutArray_1,
	dataOutArray(2) => forkC_4_dataOutArray_2
);

branchC_2: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_2_clk,
	rst => branchC_2_rst,
	dataInArray(0) => branchC_2_dataInArray_0,
	Condition(0) => branchC_2_dataInArray_1,
	pValidArray(0) => branchC_2_pValidArray_0,
	pValidArray(1) => branchC_2_pValidArray_1,
	readyArray(0) => branchC_2_readyArray_0,
	readyArray(1) => branchC_2_readyArray_1,
	nReadyArray(0) => branchC_2_nReadyArray_0,
	nReadyArray(1) => branchC_2_nReadyArray_1,
	validArray(0) => branchC_2_validArray_0,
	validArray(1) => branchC_2_validArray_1,
	dataOutArray(0) => branchC_2_dataOutArray_0,
	dataOutArray(1) => branchC_2_dataOutArray_1
);

fork_5: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork_5_clk,
	rst => fork_5_rst,
	dataInArray(0) => fork_5_dataInArray_0,
	pValidArray(0) => fork_5_pValidArray_0,
	readyArray(0) => fork_5_readyArray_0,
	nReadyArray(0) => fork_5_nReadyArray_0,
	nReadyArray(1) => fork_5_nReadyArray_1,
	validArray(0) => fork_5_validArray_0,
	validArray(1) => fork_5_validArray_1,
	dataOutArray(0) => fork_5_dataOutArray_0,
	dataOutArray(1) => fork_5_dataOutArray_1
);

phiC_0: entity work.CntrlMerge(arch) generic map (2,2,1,1,1)
port map (
	clk => phiC_0_clk,
	rst => phiC_0_rst,
	dataInArray(0) => phiC_0_dataInArray_0,
	dataInArray(1) => phiC_0_dataInArray_1,
	pValidArray(0) => phiC_0_pValidArray_0,
	pValidArray(1) => phiC_0_pValidArray_1,
	readyArray(0) => phiC_0_readyArray_0,
	readyArray(1) => phiC_0_readyArray_1,
	nReadyArray(0) => phiC_0_nReadyArray_0,
	nReadyArray(1) => phiC_0_nReadyArray_1,
	validArray(0) => phiC_0_validArray_0,
	validArray(1) => phiC_0_validArray_1,
	dataOutArray(0) => phiC_0_dataOutArray_0,
	Condition(0) => phiC_0_dataOutArray_1
);

branchC_3: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_3_clk,
	rst => branchC_3_rst,
	dataInArray(0) => branchC_3_dataInArray_0,
	Condition(0) => branchC_3_dataInArray_1,
	pValidArray(0) => branchC_3_pValidArray_0,
	pValidArray(1) => branchC_3_pValidArray_1,
	readyArray(0) => branchC_3_readyArray_0,
	readyArray(1) => branchC_3_readyArray_1,
	nReadyArray(0) => branchC_3_nReadyArray_0,
	nReadyArray(1) => branchC_3_nReadyArray_1,
	validArray(0) => branchC_3_validArray_0,
	validArray(1) => branchC_3_validArray_1,
	dataOutArray(0) => branchC_3_dataOutArray_0,
	dataOutArray(1) => branchC_3_dataOutArray_1
);

fork_7: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork_7_clk,
	rst => fork_7_rst,
	dataInArray(0) => fork_7_dataInArray_0,
	pValidArray(0) => fork_7_pValidArray_0,
	readyArray(0) => fork_7_readyArray_0,
	nReadyArray(0) => fork_7_nReadyArray_0,
	nReadyArray(1) => fork_7_nReadyArray_1,
	validArray(0) => fork_7_validArray_0,
	validArray(1) => fork_7_validArray_1,
	dataOutArray(0) => fork_7_dataOutArray_0,
	dataOutArray(1) => fork_7_dataOutArray_1
);

phiC_1: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_1_clk,
	rst => phiC_1_rst,
	dataInArray(0) => phiC_1_dataInArray_0,
	pValidArray(0) => phiC_1_pValidArray_0,
	readyArray(0) => phiC_1_readyArray_0,
	nReadyArray(0) => phiC_1_nReadyArray_0,
	validArray(0) => phiC_1_validArray_0,
	dataOutArray(0) => phiC_1_dataOutArray_0
);

sink_0: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_0_clk,
	rst => sink_0_rst,
	dataInArray(0) => sink_0_dataInArray_0,
	pValidArray(0) => sink_0_pValidArray_0,
	readyArray(0) => sink_0_readyArray_0
);

sink_1: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

sink_2: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_2_clk,
	rst => sink_2_rst,
	dataInArray(0) => sink_2_dataInArray_0,
	pValidArray(0) => sink_2_pValidArray_0,
	readyArray(0) => sink_2_readyArray_0
);

source_0: entity work.source(arch) generic map (0,1,32,32)
port map (
	clk => source_0_clk,
	rst => source_0_rst,
	nReadyArray(0) => source_0_nReadyArray_0,
	validArray(0) => source_0_validArray_0,
	dataOutArray(0) => source_0_dataOutArray_0
);

source_1: entity work.source(arch) generic map (0,1,32,32)
port map (
	clk => source_1_clk,
	rst => source_1_rst,
	nReadyArray(0) => source_1_nReadyArray_0,
	validArray(0) => source_1_validArray_0,
	dataOutArray(0) => source_1_dataOutArray_0
);

buffI_0: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffI_0_clk,
	rst => buffI_0_rst,
	dataInArray(0) => buffI_0_dataInArray_0,
	pValidArray(0) => buffI_0_pValidArray_0,
	readyArray(0) => buffI_0_readyArray_0,
	nReadyArray(0) => buffI_0_nReadyArray_0,
	validArray(0) => buffI_0_validArray_0,
	dataOutArray(0) => buffI_0_dataOutArray_0
);

buffA_1: entity work.elasticBuffer(arch) generic map (1,1,1,1)
port map (
	clk => buffA_1_clk,
	rst => buffA_1_rst,
	dataInArray(0) => buffA_1_dataInArray_0,
	pValidArray(0) => buffA_1_pValidArray_0,
	readyArray(0) => buffA_1_readyArray_0,
	nReadyArray(0) => buffA_1_nReadyArray_0,
	validArray(0) => buffA_1_validArray_0,
	dataOutArray(0) => buffA_1_dataOutArray_0
);

end behavioral; 
