

======================================================


New (Producer,Consumer) pair: (BB2, BB4)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB2, BB4)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB2, BB6)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB2, BB6)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB1, BB7)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB10, BB12)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB10, BB12)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB10, BB12)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB8, BB13)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB8, BB13)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB10, BB12)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB10, BB12)

Consumer of type type = "Constant!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB1, BB2)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB2, BB2)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C6 &  + 


	 Add a SUPPRESS with f_supp = 
 not C6 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB2, BB3)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB3, BB3)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C3 &  + 


	 Add a SUPPRESS with f_supp = 
 not C3 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB2, BB5)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB5, BB5)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C5 &  + 


	 Add a SUPPRESS with f_supp = 
 not C5 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB1, BB8)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB8, BB8)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C13 &  + 


	 Add a SUPPRESS with f_supp = 
 not C13 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB8, BB10)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  C8 &  + 


	 Add a SUPPRESS with f_supp = 
 not C8 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB10, BB10)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C12 &  + 


	 Add a SUPPRESS with f_supp = 
 not C12 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!


======================================================


New (Producer,Consumer) pair: (BB10, BB11)

Consumer of type type = "Merge!!


		 Triggering the normal non-loop addSuppress case!!!!

	 The finalized f_prod =  1 


	 The finalized f_cons =  1 


	 Don't need to add a SUPPRESS!!



======================================================


New (Producer,Consumer) pair: (BB11, BB11)

Consumer of type type = "Merge!!


		 Triggering the producer == consumer case!!!!

	 NEW DEUBUG INFO: The original producer is in BB1

	 The finalized f_prod =  1 


	 The finalized f_cons =  C11 &  + 


	 Add a SUPPRESS with f_supp = 
 not C11 &  + 


	Right before calling applyShannon, the size of f_supp is: 1

	Inside applyShannon

	Printing the f_supp after converting it to string
0 + 


F_SUPP is a single condition!!
	The condition is inverted!!
